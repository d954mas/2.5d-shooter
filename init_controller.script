local COMMON = require "libs.common"
local SM = require "libs.sm.sm"
COMMON.LOG.set_appname("game")
COMMON.LOG.toggle_print()
COMMON.LOG.override_print()
math.randomseed(os.time())
local RX = require "libs.rx"
local WORLD = require "world.world"
COMMON.empty_ne("defos")

local scenes = {
    require "scenes.game.game_scene",
}
function init(self)
    self.show_profiler = false
    COMMON.input_acquire()
   -- defos.set_view_size(nil, nil, 960, 540)
    --region FIX module not found
    local reg_scenes = {}
    for i, v in ipairs(scenes) do
        reg_scenes[i] = v()
    end
    --endregion
    WORLD:load()
    SM:register(reg_scenes)
    SM:show("GameScene")    
end

function update(self, dt)
    RX.MainScheduler:update(dt)
    SM:update(dt)
  --  WORLD:update(dt)
end

function final(self)
    COMMON.input_release()
end

function on_input(self, action_id, action, sender)
    if action_id == COMMON.HASHES.INPUT_TOGGLE_PROFILER and action.pressed then
        self.show_profiler = not self.show_profiler
        profiler.enable_ui(self.show_profiler)
        profiler.set_ui_vsync_wait_visible(false)
        return true
    end
end