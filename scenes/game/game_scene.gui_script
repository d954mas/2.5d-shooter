local COMMON = require "libs.common"
local GUI = require "libs.gui.gui"
local GUI_PROJECT = require "libs_project.gui.gui_project"
local WORLD = require "model.world"

---@class GameGuiScript
local Script = COMMON.new_n28s()

function Script:bind_vh()
	self.vh = {
		action_info = {
			root = gui.get_node("action_info"),
			lbl_root = gui.get_node("action_info/lbl_root")
		}
	}
	self.view = {
		lbl_action = GUI.LblRichtext(),
		hp_progress = GUI_PROJECT.HPBar("hp_bar"),
		ammo_panel = GUI_PROJECT.AmmoPanel("ammo_panel")
	}
end

function Script:init_gui()
	self.view.lbl_action:set_parent(self.vh.action_info.lbl_root)
end

function Script:action_info_set_visible(visible)
	gui.set_enabled(self.vh.action_info.root, visible)
end

function Script:init()
	COMMON.input_acquire()
	self:bind_vh()
	self:init_gui()
	COMMON.CONTEXT:register(COMMON.CONTEXT.NAMES.GAME_GUI, self)
end

function Script:update(dt)
	if (WORLD.battle_model and WORLD.battle_model.ecs.player) then
		self.view.hp_progress:set_progress_max(WORLD.battle_model.ecs.player.hp.max)
		self.view.hp_progress:set_progress(WORLD.battle_model.ecs.player.hp.current)
		self.view.hp_progress:update(dt)
		self.view.ammo_panel:update(dt)
	end

end

function Script:final()
	COMMON.CONTEXT:unregister(COMMON.CONTEXT.NAMES.GAME_GUI)
	COMMON.input_release()
end

function Script:on_input(action_id, action)

end

COMMON.N28S.register(Script())